name: CI/CD Room Service Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Upgrade pip if necessary
        run: |
          python -m pip install --upgrade pip

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build docker image
        run: |
          docker build . --file room_service/Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/room-service:latest

      - name: Push tag to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/room-service:latest

  build_and_push_yc:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Upgrade pip if necessary
        run: |
          python -m pip install --upgrade pip

      - name: Build docker image
        run: |
          docker build . --file booking_service/Dockerfile --tag cr.yandex/${{ secrets.YC_REGISTRY_ID }}/booking-service:latest

      - name: Login to YC Registry
        uses: docker/login-action@v3.0.0
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Push tag to YC Registry
        run: |
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/booking-service:latest 

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build_and_push_yc ]
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/booking-service:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
          revision-env: |
            AMQP_URL=${{ secrets.ENV_AMQP_URL }}
            POSTGRES_URL=${{ secrets.ENV_POSTGRES_URL }}
            PORT=${{ secrets.BOOKING_SERVICE_PORT }}